/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.16.5.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
import { CosmWasmClient, SigningCosmWasmClient, ExecuteResult } from "@cosmjs/cosmwasm-stargate";
import { Coin, StdFee } from "@cosmjs/amino";
import { GetLockResponse } from "./OsmosisLock.types";
export interface OsmosisLockReadOnlyInterface {
    contractAddress: string;
    getLocks: () => Promise<GetLockResponse>;
}
export declare class OsmosisLockQueryClient implements OsmosisLockReadOnlyInterface {
    client: CosmWasmClient;
    contractAddress: string;
    constructor(client: CosmWasmClient, contractAddress: string);
    getLocks: () => Promise<GetLockResponse>;
}
export interface OsmosisLockInterface extends OsmosisLockReadOnlyInterface {
    contractAddress: string;
    sender: string;
    lock: ({ duration }: {
        duration: number;
    }, fee?: number | StdFee | "auto", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;
    unlock: ({ lockId }: {
        lockId: number;
    }, fee?: number | StdFee | "auto", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;
    withdraw: ({ amount, denom }: {
        amount: string;
        denom: string;
    }, fee?: number | StdFee | "auto", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;
}
export declare class OsmosisLockClient extends OsmosisLockQueryClient implements OsmosisLockInterface {
    client: SigningCosmWasmClient;
    sender: string;
    contractAddress: string;
    constructor(client: SigningCosmWasmClient, sender: string, contractAddress: string);
    lock: ({ duration }: {
        duration: number;
    }, fee?: number | StdFee | "auto", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;
    unlock: ({ lockId }: {
        lockId: number;
    }, fee?: number | StdFee | "auto", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;
    withdraw: ({ amount, denom }: {
        amount: string;
        denom: string;
    }, fee?: number | StdFee | "auto", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;
}
//# sourceMappingURL=OsmosisLock.client.d.ts.map