{"version":3,"file":"index.umd.js","sources":["../src/contracts/OsmosisLock.types.ts","../src/contracts/OsmosisLock.client.ts","../src/contracts/index.ts"],"sourcesContent":["/**\n* This file was automatically generated by @cosmwasm/ts-codegen@0.16.5.\n* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,\n* and run the @cosmwasm/ts-codegen generate command to regenerate this file.\n*/\n\nexport type Addr = string;\nexport interface InstantiateMsg {\n  owner: Addr;\n}\nexport type ExecuteMsg = {\n  lock: {\n    duration: number;\n  };\n} | {\n  unlock: {\n    lock_id: number;\n  };\n} | {\n  withdraw: {\n    amount: string;\n    denom: string;\n  };\n};\nexport type QueryMsg = {\n  get_locks: {};\n};\nexport interface MigrateMsg {\n  owner: Addr;\n}\nexport interface GetLockResponse {\n  locks: number[];\n}","/**\n* This file was automatically generated by @cosmwasm/ts-codegen@0.16.5.\n* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,\n* and run the @cosmwasm/ts-codegen generate command to regenerate this file.\n*/\n\nimport { CosmWasmClient, SigningCosmWasmClient, ExecuteResult } from \"@cosmjs/cosmwasm-stargate\";\nimport { Coin, StdFee } from \"@cosmjs/amino\";\nimport { Addr, InstantiateMsg, ExecuteMsg, QueryMsg, MigrateMsg, GetLockResponse } from \"./OsmosisLock.types\";\nexport interface OsmosisLockReadOnlyInterface {\n  contractAddress: string;\n  getLocks: () => Promise<GetLockResponse>;\n}\nexport class OsmosisLockQueryClient implements OsmosisLockReadOnlyInterface {\n  client: CosmWasmClient;\n  contractAddress: string;\n\n  constructor(client: CosmWasmClient, contractAddress: string) {\n    this.client = client;\n    this.contractAddress = contractAddress;\n    this.getLocks = this.getLocks.bind(this);\n  }\n\n  getLocks = async (): Promise<GetLockResponse> => {\n    return this.client.queryContractSmart(this.contractAddress, {\n      get_locks: {}\n    });\n  };\n}\nexport interface OsmosisLockInterface extends OsmosisLockReadOnlyInterface {\n  contractAddress: string;\n  sender: string;\n  lock: ({\n    duration\n  }: {\n    duration: number;\n  }, fee?: number | StdFee | \"auto\", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;\n  unlock: ({\n    lockId\n  }: {\n    lockId: number;\n  }, fee?: number | StdFee | \"auto\", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;\n  withdraw: ({\n    amount,\n    denom\n  }: {\n    amount: string;\n    denom: string;\n  }, fee?: number | StdFee | \"auto\", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;\n}\nexport class OsmosisLockClient extends OsmosisLockQueryClient implements OsmosisLockInterface {\n  client: SigningCosmWasmClient;\n  sender: string;\n  contractAddress: string;\n\n  constructor(client: SigningCosmWasmClient, sender: string, contractAddress: string) {\n    super(client, contractAddress);\n    this.client = client;\n    this.sender = sender;\n    this.contractAddress = contractAddress;\n    this.lock = this.lock.bind(this);\n    this.unlock = this.unlock.bind(this);\n    this.withdraw = this.withdraw.bind(this);\n  }\n\n  lock = async ({\n    duration\n  }: {\n    duration: number;\n  }, fee: number | StdFee | \"auto\" = \"auto\", memo?: string, funds?: Coin[]): Promise<ExecuteResult> => {\n    return await this.client.execute(this.sender, this.contractAddress, {\n      lock: {\n        duration\n      }\n    }, fee, memo, funds);\n  };\n  unlock = async ({\n    lockId\n  }: {\n    lockId: number;\n  }, fee: number | StdFee | \"auto\" = \"auto\", memo?: string, funds?: Coin[]): Promise<ExecuteResult> => {\n    return await this.client.execute(this.sender, this.contractAddress, {\n      unlock: {\n        lock_id: lockId\n      }\n    }, fee, memo, funds);\n  };\n  withdraw = async ({\n    amount,\n    denom\n  }: {\n    amount: string;\n    denom: string;\n  }, fee: number | StdFee | \"auto\" = \"auto\", memo?: string, funds?: Coin[]): Promise<ExecuteResult> => {\n    return await this.client.execute(this.sender, this.contractAddress, {\n      withdraw: {\n        amount,\n        denom\n      }\n    }, fee, memo, funds);\n  };\n}","/**\n* This file was automatically generated by @cosmwasm/ts-codegen@0.16.5.\n* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,\n* and run the @cosmwasm/ts-codegen generate command to regenerate this file.\n*/\n\nimport * as _0 from \"./OsmosisLock.types\";\nimport * as _1 from \"./OsmosisLock.client\";\nexport namespace contracts {\n  export const OsmosisLock = { ..._0,\n    ..._1\n  };\n}"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAA;;;;IAIE;;;;;;ICJF;;;;IAIE;IASF,IAAA,sBAAA,kBAAA,YAAA;QAIE,SAAY,sBAAA,CAAA,MAAsB,EAAE,eAAuB,EAAA;YAA3D,IAIC,KAAA,GAAA,IAAA,CAAA;IAED,QAAA,IAAA,CAAA,QAAQ,GAAG,YAAA,EAAA,OAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;oBACT,OAAO,CAAA,CAAA,aAAA,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC,eAAe,EAAE;IAC1D,wBAAA,SAAS,EAAE,EAAE;IACd,qBAAA,CAAC,CAAC,CAAA;;iBACJ,CAAC;IATA,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACrB,QAAA,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;YACvC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC1C;QAOH,OAAC,sBAAA,CAAA;IAAD,CAAC,EAAA,CAAA,CAAA;IAsBD,IAAA,iBAAA,kBAAA,UAAA,MAAA,EAAA;QAAuC,SAAsB,CAAA,iBAAA,EAAA,MAAA,CAAA,CAAA;IAK3D,IAAA,SAAA,iBAAA,CAAY,MAA6B,EAAE,MAAc,EAAE,eAAuB,EAAA;IAAlF,QAAA,IAAA,KAAA,GACE,MAAM,CAAA,IAAA,CAAA,IAAA,EAAA,MAAM,EAAE,eAAe,CAAC,IAO/B,IAAA,CAAA;YAED,KAAI,CAAA,IAAA,GAAG,UAAO,EAIb,EAAE,GAAsC,EAAE,IAAa,EAAE,KAAc,EAAA;IAHtE,YAAA,IAAA,QAAQ,GAAA,EAAA,CAAA,QAAA,CAAA;IAGP,YAAA,IAAA,GAAA,KAAA,KAAA,CAAA,EAAA,EAAA,GAAsC,GAAA,MAAA,CAAA,EAAA;;;;IAChC,wBAAA,KAAA,CAAA,EAAA,OAAA,CAAA,CAAA,YAAM,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,EAAE;IAClE,gCAAA,IAAI,EAAE;IACJ,oCAAA,QAAQ,EAAA,QAAA;IACT,iCAAA;IACF,6BAAA,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,CAAA,CAAA;IAJpB,wBAAA,KAAA,CAAA,EAAA,OAAA,CAAA,CAAA,aAAO,SAIa,CAAC,CAAA;;;;aACtB,CAAC;YACF,KAAM,CAAA,MAAA,GAAG,UAAO,EAIf,EAAE,GAAsC,EAAE,IAAa,EAAE,KAAc,EAAA;IAHtE,YAAA,IAAA,MAAM,GAAA,EAAA,CAAA,MAAA,CAAA;IAGL,YAAA,IAAA,GAAA,KAAA,KAAA,CAAA,EAAA,EAAA,GAAsC,GAAA,MAAA,CAAA,EAAA;;;;IAChC,wBAAA,KAAA,CAAA,EAAA,OAAA,CAAA,CAAA,YAAM,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,EAAE;IAClE,gCAAA,MAAM,EAAE;IACN,oCAAA,OAAO,EAAE,MAAM;IAChB,iCAAA;IACF,6BAAA,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,CAAA,CAAA;IAJpB,wBAAA,KAAA,CAAA,EAAA,OAAA,CAAA,CAAA,aAAO,SAIa,CAAC,CAAA;;;;aACtB,CAAC;YACF,KAAQ,CAAA,QAAA,GAAG,UAAO,EAMjB,EAAE,GAAsC,EAAE,IAAa,EAAE,KAAc,EAAA;oBALtE,MAAM,GAAA,EAAA,CAAA,MAAA,EACN,KAAK,GAAA,EAAA,CAAA,KAAA,CAAA;IAIJ,YAAA,IAAA,GAAA,KAAA,KAAA,CAAA,EAAA,EAAA,GAAsC,GAAA,MAAA,CAAA,EAAA;;;;IAChC,wBAAA,KAAA,CAAA,EAAA,OAAA,CAAA,CAAA,YAAM,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,EAAE;IAClE,gCAAA,QAAQ,EAAE;IACR,oCAAA,MAAM,EAAA,MAAA;IACN,oCAAA,KAAK,EAAA,KAAA;IACN,iCAAA;IACF,6BAAA,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,CAAA,CAAA;IALpB,wBAAA,KAAA,CAAA,EAAA,OAAA,CAAA,CAAA,aAAO,SAKa,CAAC,CAAA;;;;aACtB,CAAC;IA3CA,QAAA,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACrB,QAAA,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACrB,QAAA,KAAI,CAAC,eAAe,GAAG,eAAe,CAAC;YACvC,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YACjC,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YACrC,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;SAC1C;QAsCH,OAAC,iBAAA,CAAA;IAAD,CAnDA,CAAuC,sBAAsB,CAmD5D,CAAA;;;;;;;;ICrGD;;;;IAIE;IAII,IAAW,SAAS,CAIzB;IAJD,CAAA,UAAiB,SAAS,EAAA;IACX,IAAA,SAAA,CAAA,WAAW,GAAQ,QAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAE,CAC7B,EAAA,EAAE,CACN,CAAC;IACJ,CAAC,EAJgB,SAAS,KAAT,SAAS,GAIzB,EAAA,CAAA,CAAA;;;;;;;;;;;;;;;"}